{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp add:*)",
      "Bash(pnpm payload migrate:create:*)",
      "Bash(cp:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm build:*)",
      "Bash(ls:*)",
      "WebFetch(domain:github.com)",
      "Bash(pnpm generate:types:*)",
      "Bash(mkdir:*)",
      "Bash(npx tsc:*)",
      "Bash(grep:*)",
      "Bash(pnpm payload migrate:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_file_upload",
      "Bash(node:*)",
      "Bash(DISABLE_DB_PUSH=true pnpm payload seed --file ./src/endpoints/seed/songs-complete.ts)",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Bash(pnpm add:*)",
      "Bash(sanity auth:*)",
      "Bash(sanity:*)",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_close",
      "mcp__sanity__get_initial_context",
      "Bash(pnpm remove:*)",
      "Bash(npx:*)",
      "Bash(pnpm schema:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm dlx:*)",
      "Bash(npm run:*)",
      "Bash(chmod:*)",
      "Bash(npm uninstall:*)",
      "Bash(sed:*)",
      "Bash(pnpm test:*)",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_press_key",
      "Bash(git add:*)",
      "mcp__supabase__list_tables",
      "mcp__supabase__get_project_url",
      "mcp__supabase__get_anon_key",
      "mcp__supabase__list_extensions",
      "mcp__supabase__execute_sql",
      "mcp__playwright__browser_fill_form",
      "WebSearch",
      "WebFetch(domain:supabase.com)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_network_requests",
      "Bash(git commit:*)",
      "Bash(git check-ignore:*)",
      "Bash(pnpm playwright test:*)",
      "Bash(y)",
      "Bash(open http://localhost:3000/onboarding)",
      "Bash(open http://localhost:3003/onboarding)",
      "Bash(open \"http://localhost:3003/onboarding\")",
      "Bash(osascript:*)",
      "Bash(ps:*)",
      "mcp__playwright__browser_resize",
      "Bash(yes)",
      "Bash(find:*)",
      "Read(//System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/**)",
      "Bash(magick:*)",
      "Bash(gh pr:*)",
      "Bash(pnpm next build:*)",
      "mcp__playwright__browser_drag",
      "Bash(convert:*)",
      "Read(//private/tmp/**)",
      "Bash(git log:*)",
      "Bash(lsof:*)",
      "Bash(pnpm exec playwright test:*)",
      "Bash(pnpm test:e2e:*)",
      "Bash(pnpm exec playwright:*)",
      "Bash(timeout:*)",
      "Bash(open \"http://localhost:3000/onboarding\")",
      "Read(//Users/Yoav/.local/share/**)",
      "mcp__shadcn-ui__get_component",
      "Bash(cat:*)",
      "Bash(DISABLE_DB_PUSH=true pnpm dev)",
      "Bash(tee:*)",
      "Read(//tmp/**)",
      "Bash(echo:*)",
      "Bash(pnpm start:*)",
      "Bash(awk:*)",
      "Bash(open \"http://localhost:3000/en/onboarding/step/10\")",
      "Bash(PORT=3001 pnpm dev)",
      "Bash(PORT=3783 pnpm dev)",
      "Bash(mv:*)",
      "Bash(.specify/scripts/bash/create-new-feature.sh:*)",
      "Bash(.specify/scripts/bash/check-prerequisites.sh:*)",
      "Bash(.specify/scripts/bash/setup-plan.sh:*)",
      "Bash(.specify/scripts/bash/update-agent-context.sh:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm test:unit:*)",
      "Bash(pnpm test:integration:*)",
      "Bash(jq:*)",
      "Bash(pnpm supabase db:*)",
      "Bash(supabase migration repair:*)",
      "Bash(test:*)",
      "Bash(psql:*)",
      "Bash(stripe listen:*)",
      "Bash(open http://localhost:9323)",
      "Bash(xargs cat:*)",
      "Bash(PORT=3783 pnpm exec playwright test src/__tests__/e2e/step14-payment-flow.spec.ts -g \"should complete payment with base package only\" --project=chromium)",
      "Bash(PORT=3783 pnpm exec playwright test --reporter=line --project=chromium)",
    ],
    "deny": [
      "Bash(kill:*)",
      "Bash(xargs kill:*)",
      "Bash(git commit:*)",
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright",
    "context7",
    "supabase",
    "shadcn-ui",
  ]
}